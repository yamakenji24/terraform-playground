name: release

on:
  push:
    branches:
      - 'main'
    paths:
      - "with-nextjs-apigateway-lambda/frontend/**"
  workflow_dispatch:

jobs:
  release-with-nextjs-apigateway-lambda:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      packages: write
    defaults:
      run:
        working-directory: ./with-nextjs-apigateway-lambda/frontend
    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: ${{ secrets.IAM_ROLE }}
          aws-region: ap-northeast-1
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: set IMAGE_URL
        id: image-url
        run: echo "IMAGE_URL=${{ steps.login-ecr.outputs.registry }}/example_next_repo:${{ github.sha }}" >> $GITHUB_ENV

      - name: npm ci
        run: npm ci
      - name: Build
        run: npm run build
      - name: Build, tag, and push docker image to Amazon ECR
        run: |
          docker build -t ${{ env.IMAGE_URL }} --build-arg build_id=${{ github.sha }} .
          docker push ${{ env.IMAGE_URL }}
      - name: deploy to lambda
        run: aws lambda update-function-code --function-name exampleNextRepo --image-uri ${{ env.IMAGE_URL }}

      - name: deploy static to s3
        run: aws s3 cp --recursive --region ap-northeast-1 ./.next/static s3://frontend-s3-bucket-testest/_next/static

      - name: deploy public to s3
        run: aws s3 cp --exclude "./public/aaaa.js" --recursive --region ap-northeast-1 ./public s3://frontend-s3-bucket-testest/_next/public